{
 "Resources": {
  "docintakebucket7A9CA393": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "loss-intake-bucket-non-prod",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-bucket/Resource"
   }
  },
  "invoiceextract937513BA": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "invoice_id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "claim_no",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "invoice_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "claim_no",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "invoice-extract-table"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InitStack/invoice-extract/Resource"
   }
  },
  "docuploadrole54E89873": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonTextractFullAccess"
       ]
      ]
     }
    ],
    "RoleName": "lambda-doc-upload-role"
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-upload-role/Resource"
   }
  },
  "docuploadroleDefaultPolicyBA65F4AA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "invoiceextract937513BA",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "docuploadroleDefaultPolicyBA65F4AA",
    "Roles": [
     {
      "Ref": "docuploadrole54E89873"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-upload-role/DefaultPolicy/Resource"
   }
  },
  "docuploadlambda1289EE69": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "eabfc490de8938adb9a162151a45f6508c78e404d08f0a3e970073d4a4e1651f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "docuploadrole54E89873",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET_NAME": {
       "Ref": "docintakebucket7A9CA393"
      },
      "TABLE_NAME": {
       "Ref": "invoiceextract937513BA"
      }
     }
    },
    "FunctionName": "doc-upload-lambda",
    "Handler": "doc_upload.execute",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "docuploadroleDefaultPolicyBA65F4AA",
    "docuploadrole54E89873"
   ],
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-upload-lambda/Resource",
    "aws:asset:path": "asset.eabfc490de8938adb9a162151a45f6508c78e404d08f0a3e970073d4a4e1651f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "docextractorlambda747BE777": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "eabfc490de8938adb9a162151a45f6508c78e404d08f0a3e970073d4a4e1651f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "docuploadrole54E89873",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET_NAME": {
       "Ref": "docintakebucket7A9CA393"
      }
     }
    },
    "FunctionName": "doc-extractor-lambda",
    "Handler": "info_extractor.execute",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "docuploadroleDefaultPolicyBA65F4AA",
    "docuploadrole54E89873"
   ],
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-extractor-lambda/Resource",
    "aws:asset:path": "asset.eabfc490de8938adb9a162151a45f6508c78e404d08f0a3e970073d4a4e1651f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "dbupdatehandlerlambda830C80DA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "eabfc490de8938adb9a162151a45f6508c78e404d08f0a3e970073d4a4e1651f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "docuploadrole54E89873",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "invoiceextract937513BA"
      }
     }
    },
    "FunctionName": "db-update-handler-lambda",
    "Handler": "db_update.execute",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "docuploadroleDefaultPolicyBA65F4AA",
    "docuploadrole54E89873"
   ],
   "Metadata": {
    "aws:cdk:path": "InitStack/db-update-handler-lambda/Resource",
    "aws:asset:path": "asset.eabfc490de8938adb9a162151a45f6508c78e404d08f0a3e970073d4a4e1651f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "docintakeapi712103E8": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "doc-intake-api"
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/Resource"
   }
  },
  "docintakeapiDeploymentF48461DA54c91c721c560af9bd1aeb8989045ad8": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "docintakeapi712103E8"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "docintakeapiv1DE1BDEB5",
    "docintakeapiv1uploadPOSTFF4FB0F0",
    "docintakeapiv1upload6435CA45"
   ],
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/Deployment/Resource"
   }
  },
  "docintakeapiDeploymentStagedev2EEE2380": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "docintakeapi712103E8"
    },
    "DeploymentId": {
     "Ref": "docintakeapiDeploymentF48461DA54c91c721c560af9bd1aeb8989045ad8"
    },
    "StageName": "dev"
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/DeploymentStage.dev/Resource"
   }
  },
  "docintakeapiv1DE1BDEB5": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "docintakeapi712103E8",
      "RootResourceId"
     ]
    },
    "PathPart": "v1",
    "RestApiId": {
     "Ref": "docintakeapi712103E8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/Default/v1/Resource"
   }
  },
  "docintakeapiv1upload6435CA45": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "docintakeapiv1DE1BDEB5"
    },
    "PathPart": "upload",
    "RestApiId": {
     "Ref": "docintakeapi712103E8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/Default/v1/upload/Resource"
   }
  },
  "docintakeapiv1uploadPOSTApiPermissionInitStackdocintakeapi512A6CBDPOSTv1uploadECD603C2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "docuploadlambda1289EE69",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "docintakeapi712103E8"
       },
       "/",
       {
        "Ref": "docintakeapiDeploymentStagedev2EEE2380"
       },
       "/POST/v1/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/Default/v1/upload/POST/ApiPermission.InitStackdocintakeapi512A6CBD.POST..v1.upload"
   }
  },
  "docintakeapiv1uploadPOSTApiPermissionTestInitStackdocintakeapi512A6CBDPOSTv1upload16298897": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "docuploadlambda1289EE69",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "docintakeapi712103E8"
       },
       "/test-invoke-stage/POST/v1/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/Default/v1/upload/POST/ApiPermission.Test.InitStackdocintakeapi512A6CBD.POST..v1.upload"
   }
  },
  "docintakeapiv1uploadPOSTFF4FB0F0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "docintakeapiv1upload6435CA45"
    },
    "RestApiId": {
     "Ref": "docintakeapi712103E8"
    },
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "docuploadlambda1289EE69",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/Default/v1/upload/POST/Resource"
   }
  },
  "docintakeapiDocIntakeUsagePlan53542426": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "docintakeapi712103E8"
      },
      "Stage": {
       "Ref": "docintakeapiDeploymentStagedev2EEE2380"
      },
      "Throttle": {}
     }
    ],
    "Throttle": {
     "BurstLimit": 2,
     "RateLimit": 10
    },
    "UsagePlanName": "doc-intake-usage-plan"
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/DocIntakeUsagePlan/Resource"
   }
  },
  "docintakeapiDocIntakeUsagePlanUsagePlanKeyResourceInitStackdocintakeapiApiKeyA044AF9F72403BA8": {
   "Type": "AWS::ApiGateway::UsagePlanKey",
   "Properties": {
    "KeyId": {
     "Ref": "docintakeapiApiKey76FA0A6C"
    },
    "KeyType": "API_KEY",
    "UsagePlanId": {
     "Ref": "docintakeapiDocIntakeUsagePlan53542426"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/DocIntakeUsagePlan/UsagePlanKeyResource:InitStackdocintakeapiApiKeyA044AF9F"
   }
  },
  "docintakeapiApiKey76FA0A6C": {
   "Type": "AWS::ApiGateway::ApiKey",
   "Properties": {
    "Enabled": true,
    "StageKeys": [
     {
      "RestApiId": {
       "Ref": "docintakeapi712103E8"
      },
      "StageName": {
       "Ref": "docintakeapiDeploymentStagedev2EEE2380"
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/doc-intake-api/ApiKey/Resource"
   }
  },
  "docProcessorStateMachineRole292FEB76": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/docProcessorStateMachine/Role/Resource"
   }
  },
  "docProcessorStateMachineRoleDefaultPolicyA278D2DC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "dbupdatehandlerlambda830C80DA",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "docextractorlambda747BE777",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "dbupdatehandlerlambda830C80DA",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "docextractorlambda747BE777",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "docProcessorStateMachineRoleDefaultPolicyA278D2DC",
    "Roles": [
     {
      "Ref": "docProcessorStateMachineRole292FEB76"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/docProcessorStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "docProcessorStateMachineE2D0070F": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "docProcessorStateMachineRole292FEB76",
      "Arn"
     ]
    },
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"docExtractTask\",\"States\":{\"docExtractTask\":{\"Next\":\"dbUpdateTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.Unknown\",\"States.Timeout\"],\"MaxAttempts\":5,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.error_Payload\",\"Next\":\"docExtractErrorHandlingTask\"}],\"Type\":\"Task\",\"TimeoutSeconds\":20,\"InputPath\":\"$\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "docextractorlambda747BE777",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"dbUpdateTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.Unknown\",\"States.Timeout\"],\"MaxAttempts\":5,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.error_Payload\",\"Next\":\"dbUpdateErrorHandlingTask\"}],\"Type\":\"Task\",\"TimeoutSeconds\":20,\"InputPath\":\"$\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "dbupdatehandlerlambda830C80DA",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"dbUpdateErrorHandlingTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"TimeoutSeconds\":20,\"InputPath\":\"$\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "docextractorlambda747BE777",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"docExtractErrorHandlingTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"TimeoutSeconds\":20,\"InputPath\":\"$\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "docextractorlambda747BE777",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":20}"
      ]
     ]
    }
   },
   "DependsOn": [
    "docProcessorStateMachineRoleDefaultPolicyA278D2DC",
    "docProcessorStateMachineRole292FEB76"
   ],
   "Metadata": {
    "aws:cdk:path": "InitStack/docProcessorStateMachine/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22R3W7CMAyFn2X3IVsH2j0wTZo2NMS2a2QSU0LbpKpdUFX13ZefjoG0K3/HdZpznEc5y+TDHZxponQxKc1O9p8MqhC+te1pKvtFqwpksdzbkVJZAOEgdGehctqf+oJdiWEqwiAMVLLfuNSLde1Ko7ogEw2ihGqnQfYvrVVsnA3frnmNTWWIvBoETbdAhExyHoqA2uTAeIbOX4PE89rEm0Z8xrp0XYU2Or9SPl0ePSXw865tFIY4FzH+KPEK+eB0aI30Tf7guoRo8X/xhp3wLkLx7UQ+AmO9H+PRloEKku9xBa/25Aq8HYgPwbgCdTD21/FFD8Of27iQEMfYPMx9tFy3fBPC89JZbTju0jqN8kj3p+xJZjP//kcyZtK0lk2FcpPqDwKVzSwbAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "InitStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "docintakeapiEndpoint7384FAE0": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "docintakeapi712103E8"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "docintakeapiDeploymentStagedev2EEE2380"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}